{"mappings":"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","sources":["./front/i18nText.ts","./front/index.ts"],"sourcesContent":["export default {\n  me: {\n    ja: \"私\",\n    en: \"me\",\n    zh: \"我\"\n  },\n  you: {\n    ja: \"あなた\",\n    en: \"you\",\n    zh: \"你\"\n  }\n}\n","/*\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.\n    If not, see <https://www.gnu.org/licenses/agpl-3.0.en.html>.\n*/\n\n\"use strict\"\n\nimport i18nText from \"./i18nText\"\n\n// system const\nconst FRAME_RATE = 60\nconst GAME_SET_CHAIN_SIZE = 5\nconst COMBO_SIZE = 3\nconst DEFAULT_COUNTRY = \"ja\"\n\n// ui const\nconst TOKEN_SIZE = 60\nconst WEIGHT_BOLD = 5\nconst WEIGHT_DEFAULT = 1\nconst COLOR_BASE = 50\nconst COLOR_MAIN = 245\nconst COLOR_FIRST_LASER = 0\nconst COLOR_SECOND_LASER = 200\nconst COLOR_FIRST = `hsl(0, 75%, 65%)`\nconst COLOR_SECOND = `hsl(180, 75%, 65%)`\nconst COLOR_FOCUS_FIELD = `rgba(${COLOR_MAIN}, ${COLOR_MAIN}, ${COLOR_MAIN}, 0.05)`\nconst TEXT_FONT = \"Ranchers\"\nconst MARGIN_FIRLD = TOKEN_SIZE\nconst COMBO_ANIME_DELAY = 10\n\nenum Player {\n  First,\n  Second,\n}\n\nenum GameState {\n  Play,\n  GameSet,\n}\n\nenum GameStateEvent {\n  Init,\n  Play,\n  GameSet,\n}\n\nenum AnimeEvent {\n  Play,\n  Done,\n  Abort,\n}\n\nenum TurnEvent {\n  ToggleField,\n  ToggleTurn,\n}\n\n// ---------------------------------------------------\n// Definition of classes & functions used in the game.\n// ---------------------------------------------------\n\nclass I18n {\n  i18nText: { [key: string]: { [key: string]: string } } = i18nText\n  country: string\n\n  constructor() {\n    this.setCountry()\n  }\n\n  setCountry(country?: string): void {\n    if (country) {\n      this.country = country\n      return\n    }\n\n    country = window.navigator.language\n    if (country && country !== \"\") {\n      this.country = country.slice(0, 2)\n      return\n    }\n\n    this.country = DEFAULT_COUNTRY\n  }\n\n  get(keyword: string): string {\n    let countries = i18nText[keyword]\n    if (countries === undefined) {\n      never(`i18n keyword is undefined. keyword: ${keyword}`)\n    }\n    return countries[this.country] ?? countries[DEFAULT_COUNTRY]\n  }\n}\n\nclass Delayer {\n  callbacks: Map<number, Array<() => void>> = new Map()\n\n  set(delay: number, callback: () => void): void {\n    let list = this.callbacks.get(frameCount + delay) ?? []\n    list.push(callback)\n    this.callbacks.set(frameCount + delay, list)\n  }\n\n  nextFrame(callback: () => void): void {\n    this.set(1, callback)\n  }\n\n  check(): void {\n    let list = this.callbacks.get(frameCount)\n    if (list === undefined) {\n      return\n    }\n\n    for (let callback of list) {\n      callback()\n    }\n    this.callbacks.delete(frameCount)\n  }\n}\n\nclass EventEmitter<T> {\n  listeners: Map<T, Function[]> = new Map()\n  onceListeners: Map<T, Function[]> = new Map()\n\n  on(eventName: T, listener: Function) {\n    let list = this.listeners.get(eventName) ?? []\n    list.push(listener)\n    this.listeners.set(eventName, list)\n  }\n\n  onOnce(eventName: T, listener: Function): void {\n    let list = this.onceListeners.get(eventName) ?? []\n    list.push(listener)\n    this.onceListeners.set(eventName, list)\n  }\n\n  emit(eventName: T, ...args: any[]): void {\n    let list = this.listeners.get(eventName) ?? []\n    for (let listener of list) {\n      listener(...args)\n    }\n\n    list = this.onceListeners.get(eventName) ?? []\n    for (let listener of list) {\n      listener(...args)\n    }\n    this.onceListeners.delete(eventName)\n  }\n}\n\ninterface AudioElements {\n  token: HTMLAudioElement | undefined\n  laser: HTMLAudioElement | undefined\n  gameset: HTMLAudioElement | undefined\n  blink: HTMLAudioElement | undefined\n}\nclass Sound {\n  audioElements: AudioElements\n\n  setup() {\n    this.audioElements = {\n      token: this.setupAudioElement(\"token\"),\n      laser: this.setupAudioElement(\"laser\"),\n      gameset: this.setupAudioElement(\"gameset\"),\n      blink: this.setupAudioElement(\"blink\"),\n    }\n  }\n\n  play(name: keyof AudioElements): void {\n    let a = this.audioElements[name] ?? never()\n    if (a.readyState === HTMLMediaElement.HAVE_ENOUGH_DATA) {\n      a.currentTime = 0\n      a.play()\n    }\n  }\n\n  stop(name: keyof AudioElements): void {\n    let a = this.audioElements[name] ?? never()\n    if (a.readyState === HTMLMediaElement.HAVE_ENOUGH_DATA) {\n      a.pause()\n    }\n  }\n\n  private setupAudioElement(name: string): HTMLAudioElement {\n    let e = document.getElementById(`audio-${name}`) ?? never()\n\n    if (e instanceof HTMLAudioElement) {\n      return e\n    } else {\n      never()\n    }\n  }\n}\n\ntype AnimeHandler = (\n  frame: number,\n  params: { [key: string]: any }\n) => boolean | void\nclass Anime extends EventEmitter<AnimeEvent> {\n  handler: AnimeHandler\n  isPlay: boolean\n  startFrameCount: number\n  params: { [key: string]: any }\n\n  // The callback will be called when all animations are done.\n  static doneAll(animes: Anime[], callback: () => void): void {\n    const maxCount = animes.length\n    let count = 0\n\n    animes.forEach((a) => {\n      a.onOnce(AnimeEvent.Done, () => {\n        count += 1\n        if (maxCount <= count) {\n          callback()\n        }\n      })\n    })\n  }\n\n  static playParallel(animes: Anime[], delay: number): Anime {\n    if (animes.length === 0) {\n      never('\"animes\" should be one or more arrays')\n    } else if (animes.length <= 1) {\n      return head(animes).play()\n    } else {\n      head(animes).play()\n      delayer.set(delay, () => {\n        this.playParallel(rest(animes), delay)\n      })\n      return tail(animes)\n    }\n  }\n\n  constructor(\n    handler: (frame: number, params?: { [key: string]: any }) => boolean | void,\n    params?: object\n  ) {\n    super()\n    this.handler = handler\n    this.params = params ?? {}\n    this.init()\n  }\n\n  play(): Anime {\n    this.isPlay = true\n    this.startFrameCount = frameCount\n    this.emit(AnimeEvent.Play)\n    return this\n  }\n\n  abort(): Anime {\n    this.init\n    this.emit(AnimeEvent.Abort)\n    return this\n  }\n\n  draw() {\n    if (!this.isPlay) {\n      return\n    }\n\n    let isEnd = this.handler(frameCount - this.startFrameCount, this.params)\n    if (isEnd) {\n      this.init()\n      this.emit(AnimeEvent.Done, this)\n    }\n  }\n\n  private init() {\n    this.isPlay = false\n    this.startFrameCount = 0\n  }\n}\n\nclass AnimeViews {\n  animes: Set<Anime> = new Set()\n\n  add(anime: Anime): void {\n    this.animes.add(anime)\n\n    anime.onOnce(AnimeEvent.Done, () => {\n      this.animes.delete(anime)\n    })\n    anime.onOnce(AnimeEvent.Abort, () => {\n      this.animes.delete(anime)\n    })\n  }\n\n  draw() {\n    for (let a of this.animes) {\n      a.draw()\n    }\n  }\n}\n\nclass Scroller {\n  x: number = 0\n  y: number = 0\n  private startX: number = 0\n  private startY: number = 0\n  private oldX: number = 0\n  private oldY: number = 0\n\n  init() {\n    this.x = 0\n    this.y = 0\n    this.startX = 0\n    this.startY = 0\n    this.oldX = 0\n    this.oldY = 0\n  }\n\n  touchStarted() {\n    this.startX = mouseX\n    this.startY = mouseY\n    this.oldX = this.x\n    this.oldY = this.y\n  }\n\n  touchMoved() {\n    cursor(\"grabbing\")\n    this.x = this.oldX + mouseX - this.startX\n    this.y = this.oldY + mouseY - this.startY\n  }\n\n  touchEnded() {\n    cursor(\"auto\")\n  }\n}\n\ntype Token = FirstToken | SecondToken | GuideToken\n\nabstract class AbstractToken {\n  x: number\n  y: number\n\n  abstract draw(): void\n\n  get baseX(): number {\n    return this.x - scroller.x\n  }\n\n  get baseY(): number {\n    return this.y - scroller.y\n  }\n\n  get centerX(): number {\n    return this.baseX + TOKEN_SIZE / 2\n  }\n\n  get centerY(): number {\n    return this.baseY + TOKEN_SIZE / 2\n  }\n}\n\nabstract class PlayerToken extends AbstractToken {\n  x: number\n  y: number\n  readonly player: Player\n  blinkAnime: Anime\n  color: string\n\n  constructor() {\n    super()\n    let max = 10\n    this.blinkAnime = new Anime((frame: number) => {\n      if (frame === 1) {\n        sound.play(\"blink\")\n      }\n      stroke(255)\n      strokeWeight((30 * frame) / max)\n      fill(this.color)\n      rect(this.x, this.y, TOKEN_SIZE, TOKEN_SIZE)\n\n      if (max <= frame) {\n        sound.stop(\"blink\")\n        return true\n      }\n    })\n  }\n\n  draw() {\n    if (this.blinkAnime.isPlay) {\n      this.blinkAnime.draw()\n    } else {\n      stroke(COLOR_MAIN)\n      strokeWeight(WEIGHT_DEFAULT)\n      fill(this.color)\n      rect(this.x, this.y, TOKEN_SIZE, TOKEN_SIZE)\n    }\n  }\n}\n\nclass FirstToken extends PlayerToken {\n  readonly player = Player.First\n  color = COLOR_FIRST\n}\n\nclass SecondToken extends PlayerToken {\n  readonly player = Player.Second\n  color = COLOR_SECOND\n}\n\nclass GuideToken extends AbstractToken {\n  readonly player = undefined\n  anime: Anime\n\n  constructor() {\n    super()\n    const ALPHA_BASE = 20\n    const PHASE = [150, 250, 400]\n    this.anime = new Anime((frame: number) => {\n      frame = frame % PHASE[PHASE.length - 1]\n\n      let c = color(\n        turnModerator.player === Player.First ? COLOR_FIRST : COLOR_SECOND\n      )\n      if (frame <= PHASE[0]) {\n        let max = PHASE[0]\n        let strength = (max - frame) / max\n        c.setAlpha(255 * 0.3 * strength + ALPHA_BASE)\n      } else if (frame <= PHASE[1]) {\n        c.setAlpha(ALPHA_BASE)\n      } else {\n        let min = PHASE[1]\n        let max = PHASE[2]\n        let strength = (frame - min) / (max - min)\n        c.setAlpha(255 * 0.3 * strength + ALPHA_BASE)\n      }\n\n      fill(c)\n      noStroke()\n      rect(this.x, this.y, TOKEN_SIZE, TOKEN_SIZE)\n    })\n  }\n\n  play(): Anime {\n    return this.anime.play()\n  }\n\n  abort(): Anime {\n    return this.anime.abort()\n  }\n\n  draw() {\n    this.anime.draw()\n  }\n}\n\nfunction makeTokenTurn(): Token {\n  switch (turnModerator.player) {\n    case Player.First:\n      return new FirstToken()\n    case Player.Second:\n      return new SecondToken()\n    default:\n      return never()\n  }\n}\n\nclass FieldData {\n  data: Array<Array<Token> | undefined>\n\n  constructor() {\n    this.init()\n  }\n\n  init() {\n    this.data = [[new GuideToken()]]\n  }\n\n  set(token: Token, column: number, row: number): void {\n    if (column < 0) {\n      return\n    }\n    if (row < 0) {\n      return\n    }\n\n    if (this.data[column] === undefined) {\n      this.data[column] = []\n    }\n    // @ts-ignore\n    this.data[column][row] = token\n  }\n\n  // Add only if empty.\n  add(token: Token, column: number, row: number): void {\n    if (undefined === this.get(column, row)) {\n      this.set(token, column, row)\n    }\n  }\n\n  get(column: number, row: number): Token | undefined {\n    if (column < 0) {\n      return undefined\n    }\n    if (row < 0) {\n      return undefined\n    }\n\n    let a = this.data[column] ?? []\n    return a[row]\n  }\n\n  forEach(callback: Function) {\n    this.data.forEach((v, column) => {\n      if (v === undefined) {\n        return\n      }\n      v.forEach((token, row) => {\n        callback(token, column, row)\n      })\n    })\n  }\n\n  getComboLines(\n    column: number,\n    row: number,\n    size: number\n  ): Array<Array<Token | undefined>> {\n    const lines: Array<Array<Token | undefined>> = []\n    let tokenLine: Array<Token | undefined> = []\n    size -= 1\n\n    // direction : horizontal\n    tokenLine = range(-size, size).map((offset) =>\n      this.get(column + offset, row)\n    )\n    lines.push(tokenLine)\n\n    // direction : virtical\n    tokenLine = range(-size, size).map((offset) =>\n      this.get(column, row + offset)\n    )\n    lines.push(tokenLine)\n\n    // direction : down and left\n    tokenLine = range(-size, size).map((offset) =>\n      this.get(column + offset, row + offset)\n    )\n    lines.push(tokenLine)\n\n    // direction : down and right\n    tokenLine = range(-size, size).map((offset) =>\n      this.get(column - offset, row + offset)\n    )\n    lines.push(tokenLine)\n\n    return lines\n  }\n}\n\nabstract class AbstractField extends EventEmitter<GameStateEvent> {\n  fieldData: FieldData\n  player: Player\n  baseX: number\n  baseY: number\n  enable: boolean\n\n  abstract draw(): void\n\n  // convert x, y -> column, row\n  abstract toCell(column: number, row: number): { column: number; row: number }\n\n  abstract windowResized(): void\n\n  constructor() {\n    super()\n    this.windowResized()\n    this.fieldData = new FieldData()\n  }\n\n  get x() {\n    return this.baseX + scroller.x\n  }\n\n  get y() {\n    return this.baseY + scroller.y\n  }\n\n  add(token: Token, column: number, row: number): void {\n    if (turnModerator.canPutField !== this.player) {\n      return\n    }\n\n    this.fieldData.set(token, column, row)\n    let tokens = judgeGameSet(turnModerator.player, column, row, this.fieldData)\n    if (0 < tokens.length) {\n      this.emit(GameStateEvent.GameSet, tokens)\n      return\n    }\n\n    this.addCandidates(column, row)\n\n    delayer.nextFrame(() => {\n      let combos = getCombos(turnModerator.player, column, row, this.fieldData)\n      chainComboAnimate(combos)\n      turnModerator.addComboCount(combos.length)\n      turnModerator.action()\n      this.guideAnimePlay()\n      sound.play(\"token\")\n    })\n  }\n\n  private addCandidates(column: number, row: number): void {\n    this.fieldData.add(new GuideToken(), column + 1, row)\n    this.fieldData.add(new GuideToken(), column - 1, row)\n    this.fieldData.add(new GuideToken(), column, row + 1)\n    this.fieldData.add(new GuideToken(), column, row - 1)\n  }\n\n  private guideAnimePlay() {\n    this.fieldData.forEach((token: Token) => {\n      if (token instanceof GuideToken) {\n        token.play()\n      }\n    })\n  }\n\n  init() {\n    this.fieldData.init()\n    this.enable = true\n    this.guideAnimePlay()\n  }\n\n  mouseClicked() {\n    const { column, row } = this.toCell(mouseX, mouseY)\n    if (column < 0) {\n      return\n    }\n    if (row < 0) {\n      return\n    }\n\n    let token = this.fieldData.get(column, row)\n    if (token instanceof GuideToken) {\n      this.add(makeTokenTurn(), column, row)\n      return false\n    }\n  }\n}\n\n// The field you can see on the left.\nclass FirstField extends AbstractField {\n  constructor() {\n    super()\n    this.player = Player.First\n  }\n\n  toCell(x: number, y: number): { column: number; row: number } {\n    return {\n      column: floor((this.x - x) / TOKEN_SIZE),\n      row: floor((this.y - y) / TOKEN_SIZE),\n    }\n  }\n\n  draw() {\n    if (!this.enable) {\n      return\n    }\n\n    // background\n    if (turnModerator.canPutField === this.player) {\n      fill(COLOR_FOCUS_FIELD)\n      noStroke()\n      rect(0, 0, this.x, this.y)\n    }\n\n    // line\n    let isCanPutField = turnModerator.canPutField === this.player\n    if (isCanPutField) {\n      strokeWeight(WEIGHT_BOLD)\n      if (turnModerator.player === Player.First) {\n        stroke(COLOR_FIRST)\n      } else {\n        stroke(COLOR_SECOND)\n      }\n    } else {\n      strokeWeight(WEIGHT_DEFAULT)\n      stroke(COLOR_MAIN)\n    }\n    line(this.x, this.y, this.x, 0)\n    line(this.x, this.y, 0, this.y)\n\n    // tokens\n    strokeWeight(WEIGHT_DEFAULT)\n    stroke(COLOR_MAIN)\n    this.fieldData.forEach(\n      (token: Token | undefined, column: number, row: number) => {\n        if (token === undefined) {\n          return\n        }\n        if (token instanceof GuideToken && !isCanPutField) {\n          return\n        }\n        token.x = this.x - (column + 1) * TOKEN_SIZE\n        token.y = this.y - (row + 1) * TOKEN_SIZE\n        token.draw()\n      }\n    )\n  }\n\n  windowResized() {\n    this.baseX = windowWidth / 2 - MARGIN_FIRLD / 2\n    this.baseY = windowHeight - MARGIN_FIRLD\n  }\n}\n\n// The field you can see on the right.\nclass SecondField extends AbstractField {\n  constructor() {\n    super()\n    this.player = Player.Second\n  }\n\n  toCell(x: number, y: number): { column: number; row: number } {\n    return {\n      column: floor((x - this.x) / TOKEN_SIZE),\n      row: floor((this.y - y) / TOKEN_SIZE),\n    }\n  }\n\n  draw() {\n    if (!this.enable) {\n      return\n    }\n\n    // background\n    if (turnModerator.canPutField === this.player) {\n      fill(COLOR_FOCUS_FIELD)\n      noStroke()\n      rect(this.x, 0, windowWidth - scroller.x, this.y)\n    }\n\n    // line\n    let isCanPutField = turnModerator.canPutField === this.player\n    if (isCanPutField) {\n      strokeWeight(WEIGHT_BOLD)\n      if (turnModerator.player === Player.First) {\n        stroke(COLOR_FIRST)\n      } else {\n        stroke(COLOR_SECOND)\n      }\n    } else {\n      strokeWeight(WEIGHT_DEFAULT)\n      stroke(COLOR_MAIN)\n    }\n    line(this.x, this.y, this.x, 0)\n    line(this.x, this.y, windowWidth, this.y)\n\n    // tokens\n    strokeWeight(WEIGHT_DEFAULT)\n    stroke(COLOR_MAIN)\n    this.fieldData.forEach(\n      (token: Token | undefined, column: number, row: number) => {\n        if (token === undefined) {\n          return\n        }\n        if (token instanceof GuideToken && !isCanPutField) {\n          return\n        }\n        token.x = this.x + column * TOKEN_SIZE\n        token.y = this.y - (row + 1) * TOKEN_SIZE\n        token.draw()\n      }\n    )\n  }\n\n  windowResized() {\n    this.baseX = windowWidth / 2 + MARGIN_FIRLD / 2\n    this.baseY = windowHeight - MARGIN_FIRLD\n  }\n}\n\nclass GameSetScene extends EventEmitter<GameStateEvent> {\n  private enable: boolean\n  private player: Player | undefined\n\n  private showAnime: Anime = new Anime((frame) => {\n    this.coreDraw(frame / 30)\n\n    if (30 <= frame) {\n      return true\n    }\n  })\n\n  private hideAnime: Anime = new Anime((frame) => {\n    this.coreDraw(1)\n\n    let strength = frame / 20\n    strength = easeInOutQuad(strength)\n\n    fill(COLOR_BASE)\n    rect(0, 0, (windowWidth / 2) * strength, windowHeight)\n    rect(\n      windowWidth - (windowWidth / 2) * strength,\n      0,\n      windowWidth,\n      windowHeight\n    )\n\n    if (20 <= frame) {\n      return true\n    }\n  })\n\n  constructor() {\n    super()\n    this.init()\n  }\n\n  init() {\n    this.enable = false\n    this.player = undefined\n  }\n\n  show(player: Player) {\n    this.enable = true\n    this.player = player\n    this.showAnime.play()\n  }\n\n  hide() {\n    this.hideAnime.onOnce(AnimeEvent.Done, () => {\n      this.enable = false\n      this.player = undefined\n      this.emit(GameStateEvent.Init)\n    })\n\n    this.hideAnime.play()\n  }\n\n  mouseClicked() {\n    if (!this.enable) {\n      return\n    }\n    this.hide()\n    return false\n  }\n\n  draw() {\n    if (!this.enable) {\n      return\n    }\n\n    if (this.showAnime.isPlay) {\n      this.showAnime.draw()\n    } else if (this.hideAnime.isPlay) {\n      this.hideAnime.draw()\n    } else {\n      this.coreDraw(1)\n    }\n  }\n\n  coreDraw(alphaRate: number) {\n    let size = getTextSize()\n\n    background(COLOR_MAIN)\n    textSize(size)\n\n    noStroke()\n    let c = color(COLOR_BASE)\n    c.setAlpha(255 * alphaRate)\n    fill(c)\n    text(\"Game Set\", windowWidth / 2, windowHeight / 2 - size)\n\n    stroke(c)\n    strokeWeight(8)\n    if (this.player == Player.First) {\n      c = color(COLOR_FIRST)\n      c.setAlpha(255 * alphaRate)\n      fill(c)\n      text(`Win : Red`, windowWidth / 2, windowHeight / 2 + size)\n    } else {\n      c = color(COLOR_SECOND)\n      c.setAlpha(255 * alphaRate)\n      fill(c)\n      text(`Win : Blue`, windowWidth / 2, windowHeight / 2 + size)\n    }\n  }\n}\n\nclass TurnModerator extends EventEmitter<TurnEvent> {\n  player: Player\n  actionCount: number\n  canPutField: Player\n\n  constructor() {\n    super()\n    this.init()\n  }\n\n  init() {\n    this.player = Player.First\n    this.actionCount = 1\n    this.canPutField = Player.First\n  }\n\n  action() {\n    this.actionCount -= 1\n    if (this.actionCount <= 0) {\n      this.toggleTurn()\n    }\n  }\n\n  addComboCount(count: number) {\n    if (count === 0) {\n      return\n    }\n    this.actionCount += count\n    this.toggleField()\n  }\n\n  toggleField() {\n    this.canPutField =\n      this.canPutField === Player.First ? Player.Second : Player.First\n    this.emit(TurnEvent.ToggleField)\n  }\n\n  toggleTurn() {\n    this.player = this.player === Player.First ? Player.Second : Player.First\n    this.actionCount = 1\n\n    if (this.canPutField !== this.player) {\n      this.canPutField = this.player\n      this.emit(TurnEvent.ToggleField)\n    }\n\n    this.emit(TurnEvent.ToggleTurn)\n  }\n}\n\nclass GameModerator {\n  // state\n  gameState: GameState = GameState.Play\n\n  // Game Object\n  firstField: FirstField\n  secondField: SecondField\n  gameSetScene: GameSetScene\n\n  constructor(\n    firstField: FirstField,\n    secondField: SecondField,\n    gameSetScene: GameSetScene\n  ) {\n    this.firstField = firstField\n    this.secondField = secondField\n    this.gameSetScene = gameSetScene\n  }\n\n  init() {\n    scroller.init()\n    turnModerator.init()\n    this.gameSetScene.init()\n    this.secondField.init()\n    this.firstField.init()\n  }\n\n  gameSet(tokens: PlayerToken[]) {\n    let hue =\n      head(tokens).player === Player.First\n        ? COLOR_FIRST_LASER\n        : COLOR_SECOND_LASER\n\n    let slashAnime = new Anime((frame) => {\n      let strength: number\n      let lineFunc = makeLineFunction(\n        head(tokens).centerX + scroller.x,\n        head(tokens).centerY + scroller.y,\n        tail(tokens).centerX + scroller.x,\n        tail(tokens).centerY + scroller.y\n      )\n\n      if (frame <= 4) {\n        strength = frame / 4\n        const [x1, y1] = lineFunc(0)\n        const [x2, y2] = lineFunc(windowWidth * strength)\n        laserLine(x1, y1, x2, y2, hue)\n      } else if (frame <= 34) {\n        if (frame === 5) sound.play(\"laser\")\n        const [x1, y1] = lineFunc(0)\n        const [x2, y2] = lineFunc(windowWidth)\n        laserLine(x1, y1, x2, y2, hue)\n      } else if (frame <= 84) {\n        if (frame === 38) sound.play(\"gameset\")\n        strength = (frame - 34) / (84 - 34)\n        const [x1, y1] = lineFunc(0)\n        const [x2, y2] = lineFunc(windowWidth)\n        const maxWeight = max([windowWidth, windowHeight]) * 2.5\n        laserLine(x1, y1, x2, y2, hue, maxWeight * strength)\n      } else if (frame <= 94) {\n        const [x1, y1] = lineFunc(0)\n        const [x2, y2] = lineFunc(windowWidth)\n        const maxWeight = max([windowWidth, windowHeight]) * 2.5\n        laserLine(x1, y1, x2, y2, hue, maxWeight)\n      } else {\n        return true\n      }\n    })\n    animeViews.add(slashAnime)\n\n    slashAnime.on(AnimeEvent.Done, () => {\n      this.firstField.enable = false\n      this.secondField.enable = false\n      this.gameSetScene.show(head(tokens).player as Player)\n    })\n\n    let animes = tokens.map((t) => t.blinkAnime)\n    animes.push(slashAnime)\n    Anime.playParallel(animes, COMBO_ANIME_DELAY)\n  }\n}\n\nfunction judgeGameSet(\n  player: Player,\n  column: number,\n  row: number,\n  field: FieldData\n): PlayerToken[] {\n  let lines = field.getComboLines(column, row, GAME_SET_CHAIN_SIZE)\n  for (let tokens of lines) {\n    let result = getComboTokens(player, tokens, GAME_SET_CHAIN_SIZE)\n    if (0 < result.length) {\n      return result\n    }\n  }\n  return []\n}\n\nfunction getCombos(\n  player: Player,\n  column: number,\n  row: number,\n  field: FieldData\n): PlayerToken[][] {\n  // Combos do not occur on enemy fields.\n  if (turnModerator.player !== turnModerator.canPutField) {\n    return []\n  }\n\n  let result: PlayerToken[][] = []\n  let lines = field.getComboLines(column, row, COMBO_SIZE + 1)\n  for (let tokens of lines) {\n    // If a combo has already occurred, it will not be counted.\n    // It exists only at the terminal.\n    let terminal = tokens.slice(0, COMBO_SIZE + 1)\n    if (isCombo(player, terminal, COMBO_SIZE + 1)) {\n      tokens = tokens.slice(COMBO_SIZE)\n    }\n    terminal = tokens.slice(-(COMBO_SIZE + 1))\n    if (isCombo(player, terminal, COMBO_SIZE + 1)) {\n      tokens = tokens.slice(0, -COMBO_SIZE)\n    }\n\n    let comboTokens = getComboTokens(player, tokens, COMBO_SIZE)\n    if (0 < comboTokens.length) {\n      result.push(comboTokens)\n    }\n  }\n\n  return result\n}\n\nfunction getComboTokens(\n  player: Player,\n  tokens: Array<Token | undefined>,\n  size: number\n): PlayerToken[] {\n  let result: PlayerToken[] = []\n\n  for (let token of tokens) {\n    if (token === undefined) {\n      result = []\n      continue\n    }\n\n    if (token.player === player) {\n      result.push(token as PlayerToken)\n    } else {\n      result = []\n    }\n\n    if (size <= result.length) {\n      return result\n    }\n  }\n  return []\n}\n\nfunction isCombo(\n  player: Player,\n  tokens: Array<Token | undefined>,\n  size: number\n): boolean {\n  return 0 < getComboTokens(player, tokens, size).length\n}\n\nconst slashAnimeHandler: AnimeHandler = (frame, params) => {\n  if (frame === 1) {\n    sound.play(\"laser\")\n  }\n\n  let strength: number\n  let lineFunc = makeLineFunction(\n    params.x1 + scroller.x,\n    params.y1 + scroller.y,\n    params.x2 + scroller.x,\n    params.y2 + scroller.y\n  )\n\n  if (frame <= 4) {\n    strength = frame / 4\n    const [x1, y1] = lineFunc(0)\n    const [x2, y2] = lineFunc(windowWidth * strength)\n    laserLine(x1, y1, x2, y2, params.hue)\n  } else if (frame <= 64) {\n    const [x1, y1] = lineFunc(0)\n    const [x2, y2] = lineFunc(windowWidth)\n    laserLine(x1, y1, x2, y2, params.hue)\n  } else if (frame <= 68) {\n    strength = (frame - 64) / (68 - 64)\n    const [x1, y1] = lineFunc(windowWidth * strength)\n    const [x2, y2] = lineFunc(windowWidth)\n    laserLine(x1, y1, x2, y2, params.hue)\n  } else {\n    return true\n  }\n}\n\n// Create a function of a straight line passing through two points.\n// The created function returns [x, y] when passed x.\n// (auxiliary variable)\nfunction makeLineFunction(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number\n): (x: number) => [number, number] {\n  if (x1 === x2) {\n    // When x1 and x2 are the same, they cannot be represented by \"y = ax + b\".\n    return (x: number) => [x1, (windowHeight * x) / windowHeight]\n  }\n\n  return (x: number) => [x, ((y2 - y1) * (x - x1)) / (x2 - x1) + y1]\n}\n\nfunction betweenLine(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n  offset: number\n): void {\n  if (x1 === x2) {\n    line(x1 + offset, y1, x2 + offset, y2)\n    line(x1 - offset, y1, x2 - offset, y2)\n  } else {\n    line(x1, y1 + offset, x2, y2 + offset)\n    line(x1, y1 - offset, x2, y2 - offset)\n  }\n}\n\nfunction laserLine(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n  hue: number,\n  coreWeight: number | undefined = undefined\n): void {\n  const rates = [5, 2, 6, 6]\n  const totalRate = rates.reduce((value, total) => total + value)\n  const totalWeight =\n    coreWeight === undefined ? TOKEN_SIZE : (coreWeight * totalRate) / rates[0]\n  const weights = rates.map((rate) => (totalWeight * rate) / totalRate / 2)\n\n  let offset = weights[0] / 2\n  stroke(`hsl(${hue}, 100%, 100%)`)\n  strokeWeight(weights[0])\n  betweenLine(x1, y1, x2, y2, offset)\n\n  offset += weights[0] / 2 + weights[1] / 2\n  stroke(`hsl(${hue}, 100%, 50%)`)\n  strokeWeight(weights[1])\n  betweenLine(x1, y1, x2, y2, offset)\n\n  offset += weights[1] / 2 + weights[2] / 2\n  stroke(`hsla(${hue}, 100%, 50%, 0.5)`)\n  strokeWeight(weights[2])\n  betweenLine(x1, y1, x2, y2, offset)\n\n  offset += weights[2] / 2 + weights[3] / 2\n  stroke(`hsla(${hue}, 100%, 50%, 0.2)`)\n  strokeWeight(weights[3])\n  betweenLine(x1, y1, x2, y2, offset)\n}\n\nfunction comboAnimate(tokens: PlayerToken[]): Anime {\n  if (tokens.length < 2) {\n    never(`You need at least two tokens. size: ${tokens.length}`)\n  }\n\n  let animes = tokens.map((t) => t.blinkAnime)\n  let tailTokenAnime = tail(animes)\n\n  let slashAnime = new Anime(slashAnimeHandler, {\n    x1: head(tokens).centerX,\n    y1: head(tokens).centerY,\n    x2: tail(tokens).centerX,\n    y2: tail(tokens).centerY,\n    hue:\n      head(tokens).player === Player.First\n        ? COLOR_FIRST_LASER\n        : COLOR_SECOND_LASER,\n  })\n  animeViews.add(slashAnime)\n\n  animes.push(slashAnime)\n  Anime.playParallel(animes, COMBO_ANIME_DELAY)\n\n  return tailTokenAnime\n}\n\nfunction chainComboAnimate(combos: PlayerToken[][]): void {\n  if (combos.length === 0) {\n    return\n  } else if (combos.length === 1) {\n    comboAnimate(head(combos))\n  } else {\n    let anime = comboAnimate(head(combos))\n    anime.onOnce(AnimeEvent.Done, () => {\n      chainComboAnimate(rest(combos))\n    })\n  }\n}\n\nfunction getTextSize() {\n  return floor(min([windowWidth, windowHeight]) / 5)\n}\n\nfunction eventPropagate(\n  eventName: string,\n  gameObjects: object[]\n): void | boolean {\n  for (let i of gameObjects) {\n    let isPropagate = tryCall(i, eventName)\n    if (isPropagate === false) {\n      return false\n    }\n  }\n}\n\nfunction tryCall(object: Object, method_name: string, ...args: any[]): any {\n  if (object === undefined) {\n    return undefined\n  }\n  if (object[method_name] instanceof Function) {\n    return object[method_name](...args)\n  }\n  return undefined\n}\n\n// function devError(msg: string) {\n//   // @ts-ignore\n//   if (process.env.NODE_ENV === \"production\") {\n//     console.error(msg)\n//   } else {\n//     throw new Error(msg)\n//   }\n// }\n\nfunction range(min: number, max: number, step: number = 1): number[] {\n  let result: number[] = []\n  for (let i = 0; i <= max - min; i += step) {\n    result.push(min + i)\n  }\n  return result\n}\n\nfunction easeInOutQuad(t: number): number {\n  return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t\n}\n\nfunction head<T>(array: Array<T>): T {\n  return array[0]\n}\n\nfunction rest<T>(array: Array<T>): Array<T> {\n  return array.slice(1)\n}\n\nfunction tail<T>(array: Array<T>): T {\n  return array[array.length - 1]\n}\n\nfunction never(message: string = \"It cannot be reached.\"): never {\n  throw new Error(message)\n}\n\nfunction print(...args: any) {\n  console.log(...args)\n}\n\n// ---------------------------------------------------\n// Define the main processing of the game.\n// ---------------------------------------------------\n\nlet views: any[] = []\nlet turnModerator = new TurnModerator()\nlet scroller = new Scroller()\nlet animeViews = new AnimeViews()\nlet delayer = new Delayer()\nlet sound = new Sound()\nlet i18n = new I18n()\n\nwindow.setup = function () {\n  createCanvas(windowWidth, windowHeight)\n  textAlign(CENTER, CENTER)\n  textFont(TEXT_FONT)\n  frameRate(FRAME_RATE)\n\n  let gameSetScene = new GameSetScene()\n\n  let firstField = new FirstField()\n\n  let secondField = new SecondField()\n\n  let gameModerator = new GameModerator(firstField, secondField, gameSetScene)\n  gameModerator.init()\n\n  firstField.on(GameStateEvent.GameSet, (tokens: PlayerToken[]) => {\n    gameModerator.gameSet(tokens)\n  })\n\n  secondField.on(GameStateEvent.GameSet, (tokens: PlayerToken[]) => {\n    gameModerator.gameSet(tokens)\n  })\n\n  gameSetScene.on(GameStateEvent.Init, () => {\n    gameModerator.init()\n  })\n\n  sound.setup()\n\n  views.push(firstField)\n  views.push(secondField)\n  views.push(animeViews)\n  views.push(gameSetScene)\n}\n\nwindow.draw = function () {\n  clear()\n  background(COLOR_BASE)\n  eventPropagate(\"draw\", views)\n  delayer.check()\n}\n\nwindow.mouseClicked = function () {\n  return eventPropagate(\"mouseClicked\", views.reverse())\n}\n\nwindow.touchStarted = function () {\n  scroller.touchStarted()\n}\n\nwindow.touchMoved = function () {\n  scroller.touchMoved()\n  return false\n}\n\nwindow.touchEnded = function () {\n  scroller.touchEnded()\n}\n\nwindow.windowResized = function () {\n  resizeCanvas(windowWidth, windowHeight)\n  return eventPropagate(\"windowResized\", views)\n}\n"],"names":["me","ja","en","zh","you","Player","GameState","GameStateEvent","AnimeEvent","TurnEvent","COLOR_FOCUS_FIELD","concat","I18n","$f1b6addfbdde286ab89b1c02deffdfd2$var$_classCallCheck","this","$f1b6addfbdde286ab89b1c02deffdfd2$var$_defineProperty","$a01e46514e872a03c83cb87b8e15c105$export$default","setCountry","country","window","navigator","language","slice","keyword","_countries$this$count","countries","undefined","never","Delayer","Map","delay","callback","_this$callbacks$get","list","callbacks","get","frameCount","push","set","_step","_iterator","$f1b6addfbdde286ab89b1c02deffdfd2$var$_createForOfIteratorHelper","s","n","done","value","err","e","f","delete","EventEmitter","eventName","listener","_this$listeners$get","listeners","_this$onceListeners$g","onceListeners","_this$listeners$get2","_this$onceListeners$g2","_len","arguments","length","args","Array","_key","_step2","_iterator2","apply","_step3","_iterator3","Sound","audioElements","token","setupAudioElement","laser","gameset","blink","name","_this$audioElements$n","a","readyState","HTMLMediaElement","HAVE_ENOUGH_DATA","currentTime","play","_this$audioElements$n2","pause","_document$getElementB","document","getElementById","HTMLAudioElement","Anime","handler","params","_this","_super","call","init","isPlay","startFrameCount","emit","Play","Abort","Done","animes","maxCount","count","forEach","onOnce","_this2","head","delayer","playParallel","rest","tail","AnimeViews","Set","anime","_this3","add","_step4","_iterator4","draw","Scroller","x","y","startX","startY","oldX","oldY","mouseX","mouseY","cursor","AbstractToken","scroller","baseX","TOKEN_SIZE","baseY","PlayerToken","_this4","_super2","blinkAnime","frame","sound","stroke","strokeWeight","fill","color","rect","stop","FirstToken","First","SecondToken","Second","GuideToken","_this7","$f1b6addfbdde286ab89b1c02deffdfd2$var$_assertThisInitialized","_super5","PHASE","c","turnModerator","player","max","strength","setAlpha","min","noStroke","abort","FieldData","data","column","row","_this$data$column","v","size","_this8","lines","tokenLine","range","map","offset","AbstractField","_this9","_super6","windowResized","fieldData","_this10","canPutField","tokens","field","_step5","_iterator5","getComboLines","result","getComboTokens","judgeGameSet","GameSet","addCandidates","nextFrame","combos","_step6","_iterator6","COMBO_SIZE","terminal","isCombo","comboTokens","getCombos","chainComboAnimate","comboAnimate","addComboCount","action","guideAnimePlay","enable","_this$toCell","toCell","makeTokenTurn","FirstField","_this11","_super7","floor","_this12","isCanPutField","line","windowWidth","MARGIN_FIRLD","windowHeight","SecondField","_this13","_super8","_this14","GameSetScene","_this15","_super9","coreDraw","t","showAnime","_this16","hideAnime","Init","hide","alphaRate","background","textSize","text","TurnModerator","_this17","_super10","actionCount","toggleTurn","toggleField","ToggleField","ToggleTurn","GameModerator","firstField","secondField","gameSetScene","_this18","hue","slashAnime","lineFunc","makeLineFunction","centerX","centerY","_lineFunc2","$f1b6addfbdde286ab89b1c02deffdfd2$var$_slicedToArray","x1","y1","_lineFunc4","laserLine","_lineFunc6","_lineFunc8","_lineFunc10","_lineFunc12","x2","y2","maxWeight","_lineFunc14","_lineFunc16","animeViews","on","show","_step7","_iterator7","slashAnimeHandler","_lineFunc18","_lineFunc20","_lineFunc22","_lineFunc24","_lineFunc26","_lineFunc28","betweenLine","coreWeight","rates","totalRate","reduce","total","totalWeight","weights","rate","tailTokenAnime","eventPropagate","gameObjects","_step8","_iterator8","tryCall","object","method_name","Function","_len4","_key4","step","i","array","message","Error","views","setup","createCanvas","textAlign","CENTER","textFont","frameRate","gameModerator","gameSet","clear","check","mouseClicked","reverse","touchStarted","touchMoved","touchEnded","resizeCanvas"],"version":3,"file":"front.efba4208.js.map"}